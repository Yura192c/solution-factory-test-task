version: '3'
services:
  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_USER=solutionfactory
      - POSTGRES_PASSWORD=solutionfactory
      - POSTGRES_DB=solutionfactory
    volumes:
      - postgres_data:/var/lib/postgresql/data


  rabbitmq:
    restart: always
    hostname: rabbitmq
    image: rabbitmq:management
    environment:
      RABBITMQ_NODENAME: "rabbit@localhost"
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - 15672:15672
      - 5672:5672

  redis:
      image: redis:3.2.8
      hostname: redis
      environment:
        - REDIS_USER="redis"
        - REDIS_PASSWORD="redis"
        - REDIS_HOST="redis"
        - ALLOW_EMPTY_PASSWORD=yes
      command:
        --requirepass redis
      ports:
        - 6379:6379

  web:
    build: .
    command: sh -c "sleep 30 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    hostname: web
    ports:
      - 8000:8000
    env_file:
      - ./.env
    volumes:
      - .:/code
    links:
      - "rabbitmq:test"
#      - db
      - rabbitmq
      - redis
    depends_on:
      - db

  celery-worker:
    restart: always
    build: .
    command: bash -c "
      rm -rf /tmp/celery*.pid &
      python -m celery -A config worker --beat --loglevel=info"

    links:
      - "rabbitmq:test"
      - web
      - db
      - redis
    depends_on:
      - rabbitmq


  flower:
    build: .
    command: sh -c "sleep 30 && celery -A config.celery flower --address=0.0.0.0 --port=5555 --loglevel=info"
    ports:
      - 5555:5555
    links:
      - "rabbitmq:test"
      - web
      - db
      - redis
      - celery-worker
    depends_on:
      - celery-worker
      - rabbitmq

volumes:
  postgres_data:
